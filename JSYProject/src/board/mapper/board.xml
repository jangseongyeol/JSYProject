<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">
  <select id="list" resultType="board.dto.BoardDTO">
       select * from(
         select A.*, rownum as rn
         from (
           select num,userid,subject,reg_date,readcount
           ,filename,filesize,down,re_level
           ,(select count(*) from board_comment
           where board_num=num) comment_count,show
           from board
           order by ref desc, re_step
         ) A   
       )
       where rn between #{start} and #{end} 
  </select>
  <insert id="insert">
    insert into board
    (num,userid,subject,passwd,ref,re_step,re_level,contents,ip,filename,filesize)
    values
( (select nvl(max(num)+1,1) from board)
 ,#{userid},#{subject},#{passwd}
 ,(select nvl(max(num)+1,1) from board)
 ,1,0,#{contents},#{ip},#{filename},#{filesize} )
  </insert>
  
  <select id="getFileName" resultType="String">
    select filename 
    from board 
    where num=#{num}
  </select>
  
  <update id="plusDown">
    update board set down=down+1 where num=#{num}
  </update>

  <select id="view" resultType="board.dto.BoardDTO">
    select * from board
    where num=#{num}
  </select>
  
  <update id="plusReadCount">
   update board set readcount=readcount+1 where num=#{num}
  </update>
  
  <select id="commentList" resultType="board.dto.BoardCommentDTO">
     select * from board_comment
     where board_num=#{num}
  </select>
  
  <insert id="commentAdd">
    insert into board_comment
    (comment_num,board_num,userid,contents) values
    ((select nvl(max(comment_num)+1,1) from board_comment)
     , #{board_num}, #{userid}, #{contents})
  </insert>
  
  <update id="updateStep">
    update board
    set re_step=re_step+1
    where ref=#{ref} and re_step >= #{re_step}
  </update>
  
  <insert id="reply">
    insert into board
    (num,userid,subject,passwd,ref,re_step,re_level,contents,ip,filename,filesize)
    values
   ( (select nvl(max(num)+1,1) from board)
    ,#{userid},#{subject},#{passwd}
    ,#{ref},#{re_step},#{re_level}
    ,#{contents},#{ip},#{filename},#{filesize} )
  </insert>
  <select id="pass_check" resultType="String">
    select passwd from board
    where num=#{num} and passwd=#{passwd}
  </select>
  
  <update id="update">
     update board
     set userid=#{userid}, subject=#{subject}
     , contents=#{contents}, filename=#{filename}
     , filesize=#{filesize}, down=#{down}
     where num=#{num}
  </update>

   <update id="delete">
    update board set show='n' 
    where num=#{num}
   </update>
   
   <select id="searchList" resultType="board.dto.BoardDTO">
   <include refid="pagingHeader"></include>
    select num,userid,subject,reg_date,readcount
     ,filename,filesize,down,re_level
     ,(select count(*) from board_comment
     where board_num=num) comment_count,show
     from board
   <include refid="search"></include> 
           order by ref desc, re_step
   <include refid="pagingFooter"></include>
    </select>
  <sql id="search">
     <choose>
       <when test="search_option != 'all'">
         where ${search_option} like #{keyword} and show='y'      
       </when>
       <otherwise>
         where ( userid like #{keyword}
         or subject like #{keyword} 
         or contents like #{keyword} ) and show='y'
       </otherwise>
     </choose>   
  </sql>     
   <sql id="pagingHeader">
     select * from(
         select A.*, rownum as rn
         from (
   </sql>
   <sql id="pagingFooter">
       ) A   
    ) where rn between #{start} and #{end}      
   </sql>
   
   <select id="count" resultType="int">
     select count(*) from board
   </select>
   
   <select id="countsearch" resultType="int">
         select count(*) from board
     <choose>
       <when test="search_option != 'all'">
         where ${search_option} like #{keyword} and show='y'
       </when>
       <otherwise>
         where ( userid like #{keyword}
         or subject like #{keyword} 
         or contents like #{keyword} ) and show='y'
       </otherwise>
     </choose>  
       order by ref desc, re_step
   </select>
   
</mapper>